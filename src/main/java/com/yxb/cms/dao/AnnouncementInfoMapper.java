
package com.yxb.cms.dao;

import com.yxb.cms.domain.vo.AnnouncementInfo;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * 公告信息DAO
 *
 */
@Mapper
public interface AnnouncementInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_announcement_info
     *
     * @mbggenerated Fri Sep 01 00:04:17 CST 2017
     */
    int deleteByPrimaryKey(Integer announcementId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_announcement_info
     *
     * @mbggenerated Fri Sep 01 00:04:17 CST 2017
     */
    int insert(AnnouncementInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_announcement_info
     *
     * @mbggenerated Fri Sep 01 00:04:17 CST 2017
     */
    int insertSelective(AnnouncementInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_announcement_info
     *
     * @mbggenerated Fri Sep 01 00:04:17 CST 2017
     */
    AnnouncementInfo selectByPrimaryKey(Integer announcementId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_announcement_info
     *
     * @mbggenerated Fri Sep 01 00:04:17 CST 2017
     */
    int updateByPrimaryKeySelective(AnnouncementInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_announcement_info
     *
     * @mbggenerated Fri Sep 01 00:04:17 CST 2017
     */
    int updateByPrimaryKey(AnnouncementInfo record);



    /**
     * 查询站内公告总记录数
     * @param annInfo 公告实体
     * @return
     */
    Long selectCountAnnouncementInfo(AnnouncementInfo annInfo);

    /**
     * 公告信息分页列表展示分页列表显示
     * @param annInfo 公告实体
     * @return
     */
    List<AnnouncementInfo> selectAnnouncementInfoListByPage(AnnouncementInfo annInfo);
    /**
     * 根据userId查询未读公告集合
     * @param userId 用户Id
     * @return
     */
    List<AnnouncementInfo> selectUnreadAnnInfoListByUserId(@Param("userId") Integer userId);

    /**
     * 根据userId查询已读公告集合
     * @param userId 用户Id
     * @return
     */
    List<AnnouncementInfo> selectReadAnnInfoListByUserId(@Param("userId") Integer userId);

    /**
     * 查询全部公告集合
     * @return
     */
    List<AnnouncementInfo> selectAllReadAnnInfoListByUserId();

    /**
     * 根据userId查询未读公告记录数
     * @param userId 用户Id
     * @return
     */
    Long selectUnreadAnnInfoCountByUserId(@Param("userId") Integer userId);


    /**
     * 根据userId查询已读公告记录数
     * @param userId 用户Id
     * @return
     */
    Long selectReadAnnInfoCountByUserId(@Param("userId") Integer userId);

    /**
     * 查询全部公告记录数
     * @return
     */
    Long selectAllReadAnnInfoCount();

}