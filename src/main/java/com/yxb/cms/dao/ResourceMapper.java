
package com.yxb.cms.dao;


import com.yxb.cms.domain.dto.ResourceMenuDto;
import com.yxb.cms.domain.vo.Resource;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * 菜单资源DAO

 */
@Mapper
public interface ResourceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_resource
     *
     * @mbggenerated Mon Aug 15 17:19:21 CST 2016
     */
    int deleteByPrimaryKey(Integer resId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_resource
     *
     * @mbggenerated Mon Aug 15 17:19:21 CST 2016
     */
    int insert(Resource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_resource
     *
     * @mbggenerated Mon Aug 15 17:19:21 CST 2016
     */
    void insertSelective(Resource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_resource
     *
     * @mbggenerated Mon Aug 15 17:19:21 CST 2016
     */
    Resource selectByPrimaryKey(Integer resId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_resource
     *
     * @mbggenerated Mon Aug 15 17:19:21 CST 2016
     */
    int updateByPrimaryKeySelective(Resource record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cc_resource
     *
     * @mbggenerated Mon Aug 15 17:19:21 CST 2016
     */
    int updateByPrimaryKey(Resource record);


    /**
     * 资源信息COUNT
     * @param resource 资源实体
     * @return
     */
    Long selectCountResource(Resource resource);

    /**
     * 根据Id查询父级资源总记录数
     * @param resParentid 父级资源
     * @return
     */
    Long selectCountResParentByResId(Integer resParentid);
    /**
     * 资源信息分页列表显示
     * @param resource 资源实体
     * @return
     */
    List<Resource> selectResourceListByPage(Resource resource);

    /**
     * 查询资源父级菜单
     * @return
     */
    List<ResourceMenuDto>selectParentIdResList();

    /**
     * 查询资源父级菜单
     * @param resParentid 父级ID
     */
    List<Resource> selectResLevelListByParentid(@Param("resParentid") Integer resParentid);

    /**
     * 查询所有菜单信息
     * @return
     */
    List<Resource> selectResourceAllList();

    /**
     *查询有效的,URL不为空的所有菜单信息
     * @return
     */
    List<Resource> selectResUrlAllList();

    /**
     * 根据菜单类型、和菜单级别查询菜单信息
     * @param resType   菜单类型
     * @param resLevel  菜单级别
     * @return
     */
    List<Resource> selectParentResListByResTypeAndResLevel(@Param("resType") Integer resType,@Param("resLevel") Integer resLevel,@Param("resId") Integer resId);

    /**
     * 根据用户Id查询用户资源菜单信息
     * @param userId 用户Id
     * @return
     */
    List<Resource> selectResListByUserId(@Param("userId") Integer userId);



    List<Resource> selectResLevelListByRoleId(@Param("role_id") Integer role_id);

    List<Resource> findResourceByRoleId(@Param("role_id") Integer role_id);
}